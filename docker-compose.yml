services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: books-exchange-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-books_exchange}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - books-network

  # Application Server
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: books-exchange-app
    restart: unless-stopped
    ports:
      - '${PORT:-3000}:3000'
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-books_exchange}
      DB_HOST: db
      DB_PORT: 5432
      LOG_LEVEL: ${LOG_LEVEL:-info}
      API_RATE_WINDOW_MIN: ${API_RATE_WINDOW_MIN:-15}
      API_RATE_MAX: ${API_RATE_MAX:-100}
      SYNC_RATE_WINDOW_MIN: ${SYNC_RATE_WINDOW_MIN:-15}
      SYNC_RATE_MAX: ${SYNC_RATE_MAX:-10}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - books-network
    volumes:
      - ./logs:/app/logs

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: books-exchange-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - books-network
    profiles:
      - with-nginx

volumes:
  postgres_data:
    driver: local

networks:
  books-network:
    driver: bridge
